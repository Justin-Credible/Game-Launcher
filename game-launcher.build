<?xml version="1.0"?>
<project name="Game-Launcher" default="build" basedir=".">

	<description>
		This is the build script for the Game Launcher project.
		Game Launcher depends on node-webkit as its runtime framework and
		Reveal.js as its UI framework. The build target will download these
		two frameworks and extract and set them up in the bin directory along
		with the source code for game launcher (from the src directory).
	</description>

	<!-- ******** Properties ************************************************************* -->

	<!-- The platform to build for; currently only win32 is supported. -->
	<property name="platform" value="win32" overwrite="false" />

	<!-- The operating system that the build script is executing on. -->
	<property name="operatingSystem" value="${operating-system::to-string(environment::get-operating-system())}" overwrite="true" />

	<property name="buildingOnWindows" value="${string::contains(operatingSystem, 'Windows')}"/>

	<!-- The version number of this source package. -->
	<property name="version" value="1.0.0" overwrite="true" />

	<!-- ******** Properties - Application Dependencies ********************************** -->

	<!-- URL to the node-webit runtime binary package. -->
	<property name="node-webkit-url-win32" overwrite="true"
		value="https://s3.amazonaws.com/node-webkit/v0.7.3/node-webkit-v0.7.3-win-ia32.zip" />

	<!-- URL to the reveal.js framework. -->
	<property name="reveal-js-url" overwrite="true"
		value="https://github.com/hakimel/reveal.js/archive/2.5.0.zip" />

	<!-- URL to the jQuery framework. -->
	<property name="jquery-url" overwrite="true"
		value="http://code.jquery.com/jquery-2.0.3.min.js" />

	<!-- ******** Properties - Bulid Process Dependencies ******************************** -->

	<!-- URL to Inno Setup Extractor tool. -->
	<property name="inno-extract-url" overwrite="true"
		value="http://constexpr.org/innoextract/files/innoextract-1.4-windows-r1.zip" />

	<!-- URL to the Resource Hacker tool. -->
	<property name="resource-hacker-url" overwrite="true"
		value="http://www.angusj.com/resourcehacker/reshack_setup.exe" />

	<!-- ******** Target: clean ********************************************************** -->

	<target name="clean" description="Removes the generated bin and tmp directories."
		depends="cleanTemp,cleanBin,cleanDist">
	</target>

	<!-- ******** Target: cleanDist ****************************************************** -->

	<target name="cleanDist" description="Removes the generated dist directory.">
		<delete dir="dist" if="${directory::exists('dist')}"/>
	</target>

	<!-- ******** Target: cleanBin ******************************************************* -->

	<target name="cleanBin" description="Removes the generated bin directory.">
		<delete dir="bin" if="${directory::exists('bin')}"/>
	</target>

	<!-- ******** Target: cleanTemp ****************************************************** -->

	<target name="cleanTemp" description="Removes the generated tmp directory.">
		<delete dir="tmp" if="${directory::exists('tmp')}"/>
	</target>

	<!-- ******** Target: build ********************************************************** -->

	<target name="build" description="Downloads and sets up project depenencies and copies source code to the bin directory.">

		<!-- Create the temp directory for holding external dependency source/packages etc. -->
		<mkdir dir="tmp"/>

		<!-- If we don't have node-webkit yet, go fetch it. -->
		<if test="${not file::exists('tmp/node-webkit-src.zip')}">
			<get src="${node-webkit-url-win32}" dest="tmp/node-webkit-src.zip"/>
		</if>

		<!-- If we don't have reveal.js yet, go fetch it. -->
		<if test="${not file::exists('tmp/reveal-js-src.zip')}">
			<get src="${reveal-js-url}" dest="tmp/reveal-js-src.zip"/>
		</if>

		<!-- If we don't have jquery yet, go fetch it. -->
		<if test="${not file::exists('tmp/jquery.min.js')}">
			<get src="${jquery-url}" dest="tmp/jquery.min.js"/>
		</if>

		<!-- We only need these tools if we are building for the Windows platform. -->
		<if test="${platform=='win32'}">

			<!-- If we don't have Inno Setup Extract yet, go fetch it. -->
			<if test="${not file::exists('tmp/inno-extract.zip')}">
				<get src="${inno-extract-url}" dest="tmp/inno-extract.zip"/>
			</if>

			<!-- If we don't have Resource Hacker yet, go fetch it. -->
			<if test="${not file::exists('tmp/resource-hacker.exe')}">
				<get src="${resource-hacker-url}" dest="tmp/resource-hacker.exe"/>
			</if>

		</if>

		<!-- If the bin directory doesn't exist yet, then create it and setup the external dependencies. -->
		<if test="${not directory::exists('bin')}">

			<!-- Create the directory structure. -->
			<mkdir dir="bin"/>
			<mkdir dir="bin/game-images"/>
			<mkdir dir="bin/resources"/>
			<mkdir dir="bin/resources/js"/>
			<mkdir dir="bin/resources/css"/>
			<mkdir dir="bin/resources/img"/>
			<mkdir dir="bin/resources/font"/>

			<!-- Setup node-webkit. -->
			<unzip zipfile="tmp/node-webkit-src.zip" todir="bin"/>
			<delete file="bin/credits.html" failonerror="false"/>
			<delete file="bin/nwsnapshot.exe" failonerror="false"/>
			<delete file="bin/ffmpegsumo.dll" failonerror="false"/>
			<move file="bin/nw.exe" tofile="bin/game-launcher.exe"/>

			<!-- Setup reveal.js. -->
			<unzip zipfile="tmp/reveal-js-src.zip" todir="tmp/reveal-js-src"/>
			<copy todir="bin/resources">
				<fileset basedir="tmp/reveal-js-src/reveal.js-2.5.0">
					<include name="js/**/*"/>
					<include name="css/*.css"/>
					<include name="css/theme/*.css"/>
				</fileset>
			</copy>

			<!-- Setup jQuery. -->
			<copy file="tmp/jquery.min.js" todir="bin/resources/js"/>

			<!-- Copy the sample game images. -->
			<copy todir="bin/game-images">
				<fileset basedir="samples/game-images">
					<include name="*"/>
				</fileset>
			</copy>

			<!--
				Modify the executable's icon; currently only supported when building for the Windows
				platform AND we are building ON a Windows OS (since the tools are Windows-only).
			-->
			<if test="${platform=='win32'}">
				<if test="${buildingOnWindows}">
					<!-- Ensure that the resource hacker tool is extracted. -->
					<if test="${not file::exists('tmp/resource-hacker/reshacker.exe')}">

						<mkdir dir="tmp/resource-hacker"/>

						<!-- First, unzip the Inno Extract tool. -->
						<unzip zipfile="tmp/inno-extract.zip" todir="tmp/inno-extract" failonerror="false"
							unless="${file::exists('tmp/inno-extract/innoextract-1.4-windows-r1/innoextract.exe')}"/>

						<!-- Next, use the Inno Extract tool to extract the contents of the Resource Hacker installer bundle. -->
						<exec program="tmp/inno-extract/innoextract-1.4-windows-r1/innoextract.exe" workingdir="tmp/" failonerror="false">
							<arg line="--silent --extract --output-dir resource-hacker resource-hacker.exe"/>
						</exec>
					</if>

					<!-- Use the resource hacker tool to inject the custom icon into the executable. -->
					<exec program="tmp/resource-hacker/app/ResHacker.exe" workingdir="." failonerror="false">
						<arg line="-modify &quot;bin/game-launcher.exe&quot;, &quot;bin/game-launcher.exe&quot;, &quot;src/img/icon.ico&quot;, ICONGROUP, IDR_MAINFRAME, 0"/>
					</exec>
				</if>
			</if>
		</if>

		<!-- Copy in the Game Launcher source files. -->
		<copy todir="bin/resources">
			<fileset basedir="src/">
				<include name="**/*"/>
			</fileset>
		</copy>

		<!-- Copy the package definition for node-webkit. -->
		<copy file="cfg/package.json" todir="bin" />

		<!-- Copy the configuration file only if it doesn't exist yet. -->
		<copy file="cfg/configuration.js" todir="bin"
			unless="${file::exists('bin/configuration.js')}"/>

	</target>

	<!-- ******** Target: package ******************************************************** -->

	<target name="package" depends="build" description="Builds the application and then packges it up into ZIP files in dist/">

		<if test="${directory::exists('dist')}">
			<delete dir="dist"/>
		</if>

		<mkdir dir="dist"/>

		<zip zipfile="dist/Game-Launcher-${version}-win32.zip">
			<fileset basedir="bin/">
				<include name="**/*"/>
			</fileset>
		</zip>

	</target>

</project>
